[{"C:\\Users\\RAVEN ELITE\\nextagram\\src\\index.js":"1","C:\\Users\\RAVEN ELITE\\nextagram\\src\\reportWebVitals.js":"2","C:\\Users\\RAVEN ELITE\\nextagram\\src\\App.js":"3","C:\\Users\\RAVEN ELITE\\nextagram\\src\\containers\\UserImages.js":"4","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\Homepage.js":"5","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\UserProfilePage.js":"6","C:\\Users\\RAVEN ELITE\\nextagram\\src\\components\\Navbar.js":"7","C:\\Users\\RAVEN ELITE\\nextagram\\src\\components\\LoadingIndicator.js":"8","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\LoginModal.js":"9","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\SignUpForm.js":"10","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\LoginForm.js":"11","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\MyProfilePage.js":"12","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\Uploadpage.js":"13"},{"size":688,"mtime":1607486174043,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":899,"mtime":1607679946993,"results":"17","hashOfConfig":"15"},{"size":917,"mtime":1607652452911,"results":"18","hashOfConfig":"15"},{"size":1425,"mtime":1607652653897,"results":"19","hashOfConfig":"15"},{"size":2013,"mtime":1607680027972,"results":"20","hashOfConfig":"15"},{"size":1318,"mtime":1607678964496,"results":"21","hashOfConfig":"15"},{"size":232,"mtime":1607073260107,"results":"22","hashOfConfig":"15"},{"size":850,"mtime":1607582634603,"results":"23","hashOfConfig":"15"},{"size":7301,"mtime":1607509857001,"results":"24","hashOfConfig":"15"},{"size":2361,"mtime":1607582352509,"results":"25","hashOfConfig":"15"},{"size":1654,"mtime":1607680326969,"results":"26","hashOfConfig":"15"},{"size":3220,"mtime":1607652356147,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"mikcul",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\RAVEN ELITE\\nextagram\\src\\index.js",[],["59","60"],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\reportWebVitals.js",[],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\App.js",[],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\containers\\UserImages.js",[],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\Homepage.js",[],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\UserProfilePage.js",["61","62","63","64","65","66"],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\components\\Navbar.js",["67"],"import {Link } from \"react-router-dom\";\r\nimport {NavbarBrand, Navbar, NavLink} from 'reactstrap';\r\nimport LoginModal from '../pages/LoginModal.js';\r\nimport {useState} from 'react';\r\n\r\nexport default ({loggedIn,setLoggedIn}) => {\r\n\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const logout = () =>\r\n    setLoggedIn(localStorage.removeItem(\"jwt\"))\r\n\r\n    return <Navbar className=\"justify-content-start pt-16 pb-16 pr-0 pl-0\" color=\"light\">\r\n                <NavbarBrand href=\"/\" className=\"text-muted\">\r\n                    <h1>Nextagram</h1>\r\n                </NavbarBrand>\r\n                <Link to=\"/\" className=\"text-muted\">\r\n                    <h3>Homepage</h3>\r\n                </Link>\r\n                {loggedIn\r\n                ?   <Link to=\"/profile\" className=\"text-muted\">\r\n                        <h3>My Profile</h3>\r\n                    </Link>\r\n                :   null\r\n                }\r\n                {\r\n                loggedIn\r\n                ?   <NavLink>\r\n                        <h3 onClick={logout}>Logout</h3>\r\n                    </NavLink>\r\n                :   <Link>\r\n                        <LoginModal isOpen={modal} toggle={toggle} setLoggedIn={setLoggedIn}/>\r\n                    </Link>\r\n                }\r\n            </Navbar>\r\n}","C:\\Users\\RAVEN ELITE\\nextagram\\src\\components\\LoadingIndicator.js",["68"],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\LoginModal.js",[],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\SignUpForm.js",["69"],"import React, {useState} from 'react';\r\nimport { Button, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, FormFeedback, FormText } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\n\r\nfunction LoginModal ({toggleloginsignup,toggle}) {\r\n\r\n  const [username,setusername]=useState(\"\");\r\n  const [email,setemail]=useState(\"\");\r\n  const [password,setpassword]=useState(\"\");\r\n  const [confirmpassword,setconfirmpassword]=useState(\"\");\r\n  const [delay, setDelay] = useState(null);\r\n  const [usernameValid, setUsernameValid] = useState(true);\r\n\r\n  const checkUsername = newUsername => {\r\n    // this should only trigger after you stop typing for 500ms\r\n    console.log(\"Making API call to check username!\");\r\n    axios\r\n      .get(\r\n        `https://insta.nextacademy.com/api/v1/users/check_name?username=${newUsername}`\r\n      )\r\n      .then(response => {\r\n        console.log(response.data)\r\n        if (response.data.valid) {\r\n          setUsernameValid(true);\r\n        } else {\r\n          setUsernameValid(false);\r\n        }\r\n      });\r\n  };\r\n  \r\n  const handleUsernameInput = e => {\r\n    // clears queue so that the old keystrokes don't trigger axios call\r\n    clearTimeout(delay);\r\n    const newUsername = e.target.value;\r\n    setusername(newUsername);\r\n\r\n    // put each new keystroke into the queue\r\n    const newDelay = setTimeout(() => {\r\n      checkUsername(newUsername);\r\n    }, 500);\r\n\r\n    setDelay(newDelay);\r\n  };\r\n\r\n  const getInputProp = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n\r\n    if (username.length < 6) {\r\n      return { invalid: true };\r\n    }\r\n\r\n    if (usernameValid) {\r\n      return { valid: true };\r\n    } else {\r\n      return { invalid: true };\r\n    }\r\n  };\r\n\r\n  const getFormFeedback = () => {\r\n    if (!username.length) {\r\n      return null;\r\n    }\r\n    if (username.length < 6) {\r\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\r\n    }\r\n    if (usernameValid) {\r\n      return <FormFeedback valid>Sweet! That name is available</FormFeedback>;\r\n    } else {\r\n      return <FormFeedback invalid>Sorry! Username is taken</FormFeedback>;\r\n    } \r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    const newemail=(e.target.value)\r\n    setemail(newemail);\r\n  }\r\n\r\n  const regex= /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}/\r\n  const getEmailProp = () => {\r\n    if (!email.length){\r\n      return null\r\n    }\r\n    if (regex.test(email)) {\r\n      return { valid: true }; \r\n    } else {\r\n      return { invalid: true };\r\n    }\r\n  }\r\n\r\n  const getemailFeedBack = () => {\r\n    if (!email.length){\r\n      return null\r\n    }\r\n    if (regex.test(email)) {\r\n      return  <FormFeedback valid>Valid email.</FormFeedback>;\r\n    } else {\r\n      return <FormFeedback invalid>Please enter valid email.</FormFeedback>;\r\n    }\r\n  }\r\n\r\n  const handlePassword = e => {\r\n    const newpassword=(e.target.value)\r\n    setpassword(newpassword);\r\n    if (!password.length) {\r\n      return null;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return { invalid: true };\r\n    }\r\n    if (password.length <6) {\r\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\r\n    }\r\n  }\r\n\r\n  const getPasswordProp = () => {\r\n    if (!password.length) {\r\n      return null;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return { invalid: true };\r\n    } else {\r\n      return { valid: true };\r\n    }\r\n  }\r\n\r\n  const passwordFormFeedback = () =>{\r\n    if (!password.length) {\r\n      return null\r\n    }\r\n    if (password.length <6) {\r\n      return <FormFeedback invalid>Must be at least 6 characters</FormFeedback>;\r\n    }\r\n  }\r\n  const handleConfirmPassword = (e) => {\r\n    const newconfirmpassword=(e.target.value)\r\n    setconfirmpassword(newconfirmpassword);\r\n  }\r\n\r\n  const getconfirmPasswordProp = () => {\r\n    if (!confirmpassword.length) {\r\n      return null;\r\n    }\r\n\r\n    if (confirmpassword !== password) {\r\n      return { invalid: true };\r\n    } else {\r\n      return {valid: true};\r\n    }\r\n  }\r\n\r\n  const confirmpasswordFormFeedBack = () => {\r\n    if (confirmpassword !== password) {\r\n      return <FormFeedback invalid>Confirm Password does not match.</FormFeedback>;\r\n    } else {\r\n      return <FormFeedback valid>Confirm Password matched.</FormFeedback>;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    axios({\r\n      method: 'POST',\r\n      url: 'https://insta.nextacademy.com/api/v1/users/',\r\n      data: {\r\n        username: username,\r\n        email: email,\r\n        password: password\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      toast(response.data.message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.error(error.response) // so that we know what went wrong if the request failed\r\n      error.response.data.message.forEach((message)=>{\r\n        toast.error(message, {\r\n          position: \"top-center\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <ModalHeader toggle={toggle}>Sign Up</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"username\">Username</Label>\r\n            <Input type=\"username\" name=\"username\" id=\"username\" placeholder=\"username\" value={username} onChange={handleUsernameInput} {...getInputProp()}/>\r\n            {getFormFeedback()}\r\n            <FormText>Enter a username between 6 and 20 characters</FormText>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"email\">Email</Label>\r\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"email\" value={email} onChange={handleEmail} {...getEmailProp()} />\r\n            {getemailFeedBack()}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"password\">Password</Label>\r\n            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" value={password} onChange={handlePassword} {...getPasswordProp()} />\r\n            {passwordFormFeedback()}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"confirmpassword\">Confirm Password</Label>\r\n            <Input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" placeholder=\"confirmpassword\" value={confirmpassword} onChange={handleConfirmPassword} {...getconfirmPasswordProp()}/>\r\n            {confirmpasswordFormFeedBack()}\r\n          </FormGroup>\r\n            <p>Already a member?<a href=\"#\" onClick={(e)=>{\r\n              e.preventDefault()\r\n              toggleloginsignup()\r\n            }}>Login here.</a></p>        \r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button disabled={!(username && email && password)} color=\"primary\" onClick={handleSubmit}>\r\n            Sign Up\r\n          </Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Form>  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginModal;","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\LoginForm.js",["70"],"import React, {useState} from 'react';\r\nimport { Button, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoginForm ({toggleloginsignup,toggle,setLoggedIn}) {\r\n\r\n  let history = useHistory()\r\n  const [username,setusername]=useState(\"\")\r\n  const [password,setpassword]=useState(\"\")\r\n\r\n  const handleLogin = () => {\r\n    axios({\r\n      method: 'POST',\r\n      url: 'https://insta.nextacademy.com/api/v1/login',\r\n      data: {\r\n        username: username,\r\n        password: password\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      localStorage.setItem('jwt', response.data.auth_token)\r\n      setLoggedIn(true)\r\n      toggle()\r\n      history.push(`/profile`)\r\n      toast.success(response.data.message, {\r\n        position: \"top-center\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    })\r\n    .catch(error => {\r\n      console.error(error.response) // so that we know what went wrong if the request failed\r\n    })\r\n  };\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <ModalHeader toggle={toggle}>Login</ModalHeader>\r\n        <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"username\">Username</Label>\r\n              <Input type=\"username\" name=\"username\" id=\"username\" placeholder=\"username\" value={username} onChange={(e)=>setusername(e.target.value)}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" value={password} onChange={(e)=>setpassword(e.target.value)}/>\r\n            </FormGroup>\r\n            <p>New member? <a href=\"#\" onClick={(e)=>{\r\n              e.preventDefault()\r\n              toggleloginsignup()\r\n            }}>Sign up here</a></p>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleLogin}>Log In</Button>\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\MyProfilePage.js",["71","72","73","74","75","76","77"],"C:\\Users\\RAVEN ELITE\\nextagram\\src\\pages\\Uploadpage.js",["78","79"],"import React, {useEffect, useState} from 'react';\r\nimport {Modal} from 'reactstrap';\r\nimport {Card, CardImg} from 'reactstrap';\r\nimport { Button, Form, FormGroup, Label, CustomInput, Input, FormText } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nconst UploadPage = () => {\r\n\r\n  const [imageFile, setImageFile] = useState(null)\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n    const handleFile = (e => {\r\n    e.preventDefault()\r\n    const selectImageFile=e.target.files\r\n    setImageFile(selectImageFile)\r\n    console.log(imageFile)\r\n    setPreviewImage(URL.createObjectURL(selectImageFile[0]))\r\n  })\r\n  console.log(imageFile)\r\n    \r\n\r\n    const handleSubmit = (e => {\r\n    // Prevent the default behaviour of the form submitting\r\n    e.preventDefault();\r\n    // Authorization of the user\r\n    let JWT = localStorage.getItem(\"jwt\");\r\n    // Formdata object to hold the image file to send to the server\r\n    let formData = new FormData();\r\n    // Append the key:value pair to the formData object\r\n    formData.append(\"image\", imageFile[0]);\r\n  \r\n    axios.post(\"https://insta.nextacademy.com/api/v1/images/\",\r\n    formData,\r\n    {\r\n        headers: { \r\n            \"Authorization\" : `Bearer ${JWT}` \r\n        }\r\n    })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n            setMessage(\"Image Uploaded Successfully!\")\r\n            setPreviewImage(null)\r\n            setImageFile(null)\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response);\r\n      });\r\n  });\r\n\r\n    return(\r\n      // Your code will go here\r\n        <>\r\n        <div>\r\n            <button className=\"text-muted\" onClick={toggle}>Upload</button>\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n            <Form>\r\n            <FormGroup>\r\n                <Label for=\"uploadFile\">Image Upload</Label>\r\n                    <Card>\r\n                    {previewImage ? (\r\n                        <CardImg\r\n                        src={previewImage}\r\n                        width=\"50%\"\r\n                        height=\"300px\"\r\n                        />\r\n                        ) : (\r\n                        <h3 style={{height:\"300px\"}}className=\"text-center\">\r\n                        {message ? message : \"Live Preview\"}\r\n                        </h3>\r\n                    )}\r\n                    </Card>\r\n                <CustomInput\r\n                type=\"file\"\r\n                name=\"image-file\"\r\n                multiple=\"multiple\"\r\n                onChange= { handleFile\r\n                    // The function to call when you have selected a file will be called here\r\n                    }\r\n                />\r\n                <FormText color=\"muted\">\r\n                Make sure the image being uploaded is a supported format.\r\n                </FormText>\r\n            </FormGroup>\r\n            <Button type=\"submit\" color=\"primary\" disabled={!imageFile} onClick={handleSubmit}>\r\n                Upload\r\n            </Button>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadPage;",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":20,"nodeType":"86","messageId":"87","endLine":5,"endColumn":28},{"ruleId":"84","severity":1,"message":"88","line":5,"column":30,"nodeType":"86","messageId":"87","endLine":5,"endColumn":38},{"ruleId":"84","severity":1,"message":"89","line":6,"column":5,"nodeType":"86","messageId":"87","endLine":6,"endColumn":14},{"ruleId":"84","severity":1,"message":"90","line":6,"column":16,"nodeType":"86","messageId":"87","endLine":6,"endColumn":28},{"ruleId":"84","severity":1,"message":"91","line":6,"column":30,"nodeType":"86","messageId":"87","endLine":6,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":43,"column":21,"nodeType":"94","endLine":43,"endColumn":185},{"ruleId":"95","severity":1,"message":"96","line":6,"column":1,"nodeType":"97","endLine":36,"endColumn":2},{"ruleId":"92","severity":1,"message":"93","line":5,"column":12,"nodeType":"94","endLine":5,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":229,"column":33,"nodeType":"94","endLine":232,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":56,"column":28,"nodeType":"94","endLine":59,"endColumn":16},{"ruleId":"84","severity":1,"message":"100","line":4,"column":11,"nodeType":"86","messageId":"87","endLine":4,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":4,"column":20,"nodeType":"86","messageId":"87","endLine":4,"endColumn":28},{"ruleId":"84","severity":1,"message":"88","line":4,"column":30,"nodeType":"86","messageId":"87","endLine":4,"endColumn":38},{"ruleId":"84","severity":1,"message":"89","line":5,"column":5,"nodeType":"86","messageId":"87","endLine":5,"endColumn":14},{"ruleId":"84","severity":1,"message":"90","line":5,"column":16,"nodeType":"86","messageId":"87","endLine":5,"endColumn":28},{"ruleId":"84","severity":1,"message":"91","line":5,"column":30,"nodeType":"86","messageId":"87","endLine":5,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":36,"column":25,"nodeType":"94","endLine":36,"endColumn":192},{"ruleId":"84","severity":1,"message":"101","line":1,"column":16,"nodeType":"86","messageId":"87","endLine":1,"endColumn":25},{"ruleId":"84","severity":1,"message":"102","line":4,"column":55,"nodeType":"86","messageId":"87","endLine":4,"endColumn":60},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'CardText' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CardImg' is defined but never used.","'useEffect' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]